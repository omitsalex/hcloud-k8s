---
- name: Load Kubernetes Images
  shell: kubeadm config images pull

- name: Init Kubeadm - Kubernetes Master
  shell: kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-cert-extra-sans=10.0.1.2 --ignore-preflight-errors=NumCPU

- name: Create Kube-Config Folder
  file:
    path: /root/.kube
    state: directory

- name: Copy Kube-Config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: yes

- name: Create Directory K8s yaml files
  file:
    path: /tmp/k8s-install
    state: directory

- name: Create a Hetzner Secret object
  shell: kubectl -n kube-system create secret generic hcloud --from-literal=network=kubernetes --from-literal=token="{{ hetzner_token }}"

- name: Copy yaml cloud-controller-manager for Hetzner Cloud
  copy:
    src: "{{ playbook_dir }}/roles/kube-master/files/hcloud-controller.yaml"
    dest: /tmp/k8s-install/hcloud-controller.yaml

- name: Deploy Hetzner Cloud Controller Manager
  shell: kubectl create -f /tmp/k8s-install/hcloud-controller.yaml

- name: Copy yaml Cilium Network Plugin
  copy:
    src: "{{ playbook_dir }}/roles/kube-master/files/cilium.yaml"
    dest: /tmp/k8s-install/cilium.yaml

- name: Deploy Cilium Network Plugin
  shell: kubectl create -f /tmp/k8s-install/cilium.yaml

- name: Create a CSI Hetzner Secret object
  shell: kubectl -n kube-system create secret generic hcloud-csi --from-literal=network=kubernetes --from-literal=token="{{ hetzner_token }}"

- name: Copy yaml HCloud CSI
  copy:
    src: "{{ playbook_dir }}/roles/kube-master/files/hcloud-csi.yaml"
    dest: /tmp/k8s-install/hcloud-csi.yaml

- name: Deploy HCloud CSI hetznercloud/hcloud-csi-driver
  shell: kubectl create -f /tmp/k8s-install/hcloud-csi.yaml

- name: Copy Kube-Config to Local Device
  slurp:
    src: /etc/kubernetes/admin.conf
  register: kubeconf

- name: Create Join Command for the nodes1
  become: true
  become_user: root
  shell: kubeadm token create --print-join-command
  register: join

- name: Save Join to file
  local_action: copy content="{{ join.stdout }}" dest="/tmp/join.sh"
  vars:
     ansible_become: no

- name: Save Join to file1
  local_action: copy content="{{ join.stdout }}" dest="/tmp/join.sh"
  vars:
     ansible_become: no

- name: Mark server done
  file:
    path: /opt/master.txt
    state: touch
    mode: u+rw,g-wx,o-rwx
    modification_time: preserve
    access_time: preserve